# Generated by Django 4.2 on 2024-02-05 17:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bio_tables', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BcDatabaseConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine', models.IntegerField(choices=[(1, 'Oracle')], default=1, verbose_name='Database Type')),
                ('host', models.CharField(max_length=50, verbose_name='Server Address')),
                ('name', models.CharField(help_text='TTRAN/PTRAN', max_length=20, verbose_name='Database Name')),
                ('port', models.IntegerField(default=1521, verbose_name='Port')),
                ('account_name', models.CharField(max_length=20, verbose_name='Account Name')),
                ('uploader', models.CharField(blank=True, help_text='If not Account Name', max_length=20, null=True, verbose_name='Uploader Name')),
            ],
        ),
        migrations.CreateModel(
            name='GlobalSampleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(help_text='The column name of a sensor or a short name commonly used for the sample', max_length=20, unique=True, verbose_name='Short/Column Name')),
                ('long_name', models.CharField(blank=True, help_text='Short descriptive name for this type of sample/sensor', max_length=126, null=True, verbose_name='Name')),
                ('priority', models.IntegerField(default=1, verbose_name='Priority')),
                ('is_sensor', models.BooleanField(default=False, help_text='Identify this sample type as a type of sensor', verbose_name='Is Sensor')),
                ('datatype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sample_types', to='bio_tables.bcdatatype', verbose_name='BioChem DataType')),
            ],
            options={
                'ordering': ('is_sensor', 'short_name'),
            },
        ),
        migrations.CreateModel(
            name='LocalSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_location', models.FilePathField(default='./missions', help_text='Location of individual mission databases', verbose_name='Mission Database(s) Path')),
                ('connected', models.BooleanField(default=False, verbose_name='Connected')),
            ],
        ),
        migrations.CreateModel(
            name='SampleTypeConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(help_text='file type extension e.g csv, xls, xlsx, dat', max_length=5, verbose_name='File Type')),
                ('skip', models.IntegerField(default=0, help_text='The row containing headers is often not the first row of a file. This value indicates what row it is normally located on.', verbose_name='Header Row')),
                ('sample_field', models.CharField(help_text='Lowercase name of the column that contains the bottle ids', max_length=50, verbose_name='Sample Column')),
                ('value_field', models.CharField(help_text='Lowercase name of the column that contains the value data', max_length=50, verbose_name='Value Column')),
                ('tab', models.IntegerField(default=0, help_text='The tab number data is located on.For MS Excel, the first tab is zero', verbose_name='Tab')),
                ('flag_field', models.CharField(blank=True, help_text='Lowercase name of the column that contains flags, if it exists', max_length=50, null=True, verbose_name='Flag Column')),
                ('comment_field', models.CharField(blank=True, help_text='Lowercase name of the column containing comments, if it exists', max_length=50, null=True, verbose_name='Comment Column')),
                ('allow_blank', models.BooleanField(default=True, help_text='Should values be kept if the sample column is blank?', verbose_name='Allow Blank Samples?')),
                ('allow_replicate', models.BooleanField(default=True, help_text='Can this sample have replicate sample values?', verbose_name='Allow Replicate Samples?')),
                ('sample_type', models.ForeignKey(help_text='The sample type this config is intended for', on_delete=django.db.models.deletion.DO_NOTHING, related_name='configs', to='user_settings.globalsampletype', verbose_name='Sample Type')),
            ],
        ),
    ]
