# Generated by Django 4.2 on 2024-01-11 18:39

from django.db import migrations, models, transaction
import django.db.models.deletion
import django.utils.timezone


def write_bulk_update(model, update_list, fields):
    if len(update_list) > 0:
        with transaction.atomic():
            model.objects.bulk_update(update_list, fields)
            return True

    return False


def write_bulk_create(model, create_list):
    if len(create_list) > 0:
        with transaction.atomic():
            model.objects.bulk_create(create_list)
            return True

    return False


def copy_mission_to_trip(apps, schema_editor):
    Mission = apps.get_model('core', 'Mission')
    Trip = apps.get_model('core', 'Trip')

    create_trips = []
    for mission in Mission.objects.all():
        trip = Trip(mission_id=mission.pk)
        trip.start_date = mission.start_date
        trip.end_date = mission.end_date
        trip.lead_scientist = mission.lead_scientist
        trip.platform = mission.platform
        trip.protocol = mission.protocol
        trip.collector_comments = mission.collector_comments
        trip.more_comments = mission.more_comments
        trip.data_manager_comments = mission.data_manager_comments

        create_trips.append(trip)
        if write_bulk_create(Trip, create_trips):
            create_trips = []

    write_bulk_create(Trip, create_trips)


def copy_trip_to_mission(apps, schema_editor):
    Mission = apps.get_model('core', 'Mission')
    Trip = apps.get_model('core', 'Trip')

    update_mission = []
    fields = ['start_date', 'end_date', 'lead_scientist', 'platform', 'protocol', 'collector_comments',
              'more_comments', 'data_manager_comments']
    for mission in Mission.objects.all():
        trip = mission.trips.first()
        mission.start_date = trip.start_date
        mission.end_date = trip.end_date
        mission.lead_scientist = trip.lead_scientist
        mission.platform = trip.platform
        mission.protocol = trip.protocol
        mission.collector_comments = trip.collector_comments
        mission.more_comments = trip.more_comments
        mission.data_manager_comments = trip.data_manager_comments

        update_mission.append(mission)
        if write_bulk_update(Mission, update_mission, fields):
            update_mission = []

    write_bulk_update(Mission, update_mission, fields)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_rename_instrumentsensor_attachment_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Cruise Start Date')),
                ('end_date', models.DateField(default=django.utils.timezone.now, verbose_name='Cruise End Date')),
                ('lead_scientist', models.CharField(default='N/A', help_text='Chief scientist / principal investigator; LASTNAME,FIRSTNAME', max_length=50, verbose_name='Lead Scientist')),
                ('platform', models.CharField(default='N/A', help_text='May be vessel name, fishing boat, wharf, various small vessels, multiple ships. Check that name is spelled correctly. “Unknown” is acceptable for historical data', max_length=50, verbose_name='Platform')),
                ('protocol', models.CharField(default='N/A', help_text='A citation should be given if standard protocols were used during the mission. The use of non-standard protocols should be noted and further details provided in the collector comments field', max_length=50, verbose_name='Protocol')),
                ('collector_comments', models.CharField(blank=True, help_text='Comments from the collector that are pertinent to the entire mission. Generally referring to data collection, analysis, publications, joint missions (more than one institute involved)', max_length=200, null=True, verbose_name='Collector Comments')),
                ('more_comments', models.CharField(blank=True, max_length=200, null=True, verbose_name='More Comments')),
                ('data_manager_comments', models.CharField(blank=True, help_text='Comments from the data manager that are pertinent to the entire mission. Generally referring to data management history (processing steps, edits, special warnings)', max_length=200, null=True, verbose_name='Data Manager Comments')),
                ('mission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mission', verbose_name='Mission', related_name='trips')),
            ],
        ),
        migrations.RunPython(copy_mission_to_trip, lambda apps, schema_editor:()),
        migrations.AlterField(
            model_name='mission',
            name='end_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Cruise End Date'),
        ),
        migrations.AlterField(
            model_name='mission',
            name='start_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Cruise Start Date'),
        ),
        migrations.RunPython(lambda apps, schema_editor:(), copy_trip_to_mission),
        migrations.RemoveField(
            model_name='mission',
            name='collector_comments',
        ),
        migrations.RemoveField(
            model_name='mission',
            name='data_manager_comments',
        ),
        migrations.RemoveField(
            model_name='mission',
            name='end_date',
        ),
        migrations.RemoveField(
            model_name='mission',
            name='lead_scientist',
        ),
        migrations.RemoveField(
            model_name='mission',
            name='more_comments',
        ),
        migrations.RemoveField(
            model_name='mission',
            name='platform',
        ),
        migrations.RemoveField(
            model_name='mission',
            name='protocol',
        ),
        migrations.RemoveField(
            model_name='mission',
            name='start_date',
        ),
    ]
