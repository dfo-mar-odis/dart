# Generated by Django 4.2 on 2023-08-23 09:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_alter_discretesamplevalue_sample'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='sampletype',
            unique_together=set(),
        ),
        migrations.CreateModel(
            name='SampleTypeConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(help_text='file type extension e.g csv, xls, xlsx, dat', max_length=5, verbose_name='File Type')),
                ('skip', models.IntegerField(default=0, help_text='The row containing headers is often not the first row of a file. This value indicates what row it is normally located on.', verbose_name='Header Row')),
                ('sample_field', models.CharField(help_text='Lowercase name of the column that contains the bottle ids', max_length=50, verbose_name='Sample Column')),
                ('value_field', models.CharField(help_text='Lowercase name of the column that contains the value data', max_length=50, verbose_name='Value Column')),
                ('tab', models.IntegerField(default=0, help_text='The tab number data is located on.For MS Excel, the first tab is zero', verbose_name='Tab')),
                ('flag_field', models.CharField(blank=True, help_text='Lowercase name of the column that contains flags, if it exists', max_length=50, null=True, verbose_name='Flag Column')),
                ('replicate_field', models.CharField(blank=True, help_text='Lowercase name of the column indicating a replicate, if it exists', max_length=50, null=True, verbose_name='Replicate Column')),
                ('comment_field', models.CharField(blank=True, help_text='Lowercase name of the column containing comments, if it exists', max_length=50, null=True, verbose_name='Comment Column')),
                ('allow_blank', models.BooleanField(default=True, help_text='Should values be kept if the sample column is blank?', verbose_name='Allow Blank Samples?')),
                ('allow_replicate', models.BooleanField(default=True, help_text='Can this sample have replicate sample values?', verbose_name='Allow Replicate Samples?')),
                ('sample_type', models.ForeignKey(help_text='The sample type this config is intended for', on_delete=django.db.models.deletion.CASCADE, related_name='configs', to='core.sampletype', verbose_name='Sample Type')),
            ],
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='allow_blank',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='allow_replicate',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='comment_field',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='file_type',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='flag_field',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='replicate_field',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='sample_field',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='skip',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='tab',
        ),
        migrations.RemoveField(
            model_name='sampletype',
            name='value_field',
        ),
    ]
